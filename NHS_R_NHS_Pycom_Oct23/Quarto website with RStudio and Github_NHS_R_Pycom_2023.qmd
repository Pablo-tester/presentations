---
title: "Create Quarto website using RStudio and GitHub"
author: "Pablo Leon-Rodenas"
date: "`r Sys.Date()`"
editor: visual
format:
  revealjs:
    smaller: true 
    theme: dark
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/quarto.png
    css: styles.css
    footer: <https://github.com/Pablo-source>
resources:
  - demo.pdf
---

## Objective {background="#43464B"}

This is a tutorial about creating your personal website using Quarto in RStudio (from Posit) and to publish it to GitHub. The website will include a section about R and Python online resources

`Pre-requisites`

-   GitHub Account: You must have a GitHub account or create a new one to host your website.

-   RStudio: We will push all our code to GitHub using Rstudio (you can use its built in terminal to do it so)

-   Git and GitHub: We will use Git integrated within Rstudio to publish the different website files (index.html, about.html, etc) to GitHub. You can also upload files directly to GitHub website repo.

## Presentation structure{background="#43464B"}

-   Step 01: Create a new `GitHub Account`

-   Step 02: Create a `new repository` to host your website on GitHub

-   Step 03: Create `new folder` in your local machine to build your website

-   Step 04: Create new `RStudio project`

-   Step 05: Create `Quarto website document`

-   Step 06: `Critical` step. Change `output` directory to a `new "docs" folder`


## Presentation structure {background="#43464B"}

-   Step 07: Populate `Index file` with content and click on `"Render"`

-   Step 08: Create new `quarto file` to populate the `new "resources" tab` in our website

-   Step 09: Go to the `_quarto.yml` and add the `new section` below the about.qmd line

-   Step 10: Go to `"Pages"` left menu on the `"Setting"` main top menu on our Pablo-tester new repo

-   Step 11: `Push` all your website `files` to `GitHub` dedicated repo using `RStudio`

-   Step 12: Check all GitHub `website` `sections` content is `accessible` from your browser using website URL

## 01.Create GitHub Account{background="#43464B"}

For this workshop, I am going to use my GitHub account https://github.com/Pablo-tester. My main GitHub account already includes a personal website: https://github.com/Pablo-source/Pablo-source.github.io

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/01_pablo_source_github_repo.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/02_pablo_tester_repo.png)
:::
:::

## 02.Create new GitHub repository{background="#43464B"}

It will host our website. Name this repo as your repository followed by github.io as this is a website.

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/03_Step_02_new github_repo_ website.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/04_Step_02_New_ repo_ website_name.png)

![](NHSR_Pycon_images/05_Step_02_website_repo_created.png)
:::
:::

## 03.Local Quarto website folder{background="#43464B"}

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/06_Step_03_create_ folder_01.png) 

- Previously created local folder named "Build_new_website"

- Create new R project

- Containing new Quarto Website project.
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/07_Step_03_create project_01.png)
![](NHSR_Pycon_images/08_Step_03_create project_02.png)
:::
:::

## 05.Create Quarto website{background="#43464B"}

We setup the Quarto website using the **repository name** we created at the start “Pablo-tester.github.io”. This is required for the website to be rendered in GitHub.

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/09_Step_05_Create_quarto_website 01.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/10_Step_05_Create_quarto_website_02.png)
:::
:::

Our Quarto website will create a new project folder as a sub-directory of our main folder:\~/Documents/Pablo_zorin/Pablo_tester/Build_new_website

-  Tick check box: Create a git repository 

-  Tick check box: Open in a new session

## 05.Set of Quarto website files{background="#43464B"}

Click on "Create Project" to open the Quarto Website project. Website files included inside new folder "Pablo-tester.github.io"

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/11_Step_05_cuarto_website_files_01.png)
It that will be populated with the following Quarto related files: 
- quarto.yml

- .gitignore

- about.qmd

- index.qmd

- styles.css

- Pablo-tester.github.Rproj

 
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/12_Step_05_cuarto_website_files_02.png)
![](NHSR_Pycon_images/13_Step_05_cuarto_website_files_03.png)
:::
:::

## 06. Add docs folder to yaml file{background="#43464B"}

When rendering a Quarto documents, quarto saves the rendered website to `output` directory by default.

To host your Quarto website using GitHub pages, change this setup to point to a new `docs` folder.

![](NHSR_Pycon_images/14_Step_06_new_docs_folder.png)


Change `output` directory to a new `docs` folder


## 07. Populate Index file with content{background="#43464B"}

Open the `Index.qmd` file, populate it with content and click on Render. Include content about the general purpose of this website.

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/15_Step_07_populate_index_file.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/16_Step_07_populate_index_file01.png)
:::
:::
This action will create a new `docs` folder on your Files pane. Now our Quarto website is ready to be pushed to GitHub, so it would be rendered using GitHub Pages.

## 08. Fill Resources content{background="#43464B"}

Create new `quarto file` to populate `resources` tab in our website

In Rstudio click File > New File > Quarto document. Name this new Quarto file `Resources`

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/17_Step_08_populate_resources_file01.png)

:::

::: {.column width="60%"}
![](NHSR_Pycon_images/18_Step_08_populate_resources_file02.png)

:::
:::

## 09. Add new section to quarto.yml file{background="#43464B"}

Modify _quarto.yml file content to include new quarto file `resources.qmd` as a new website section.

![](NHSR_Pycon_images/19_Step_09_resources_tab.png)

Click on save to keep the changes introduced to  this _quarto.yml file. 

The HTML output file from resources tab is saved in the /docs folder.


## 10. Set branch to docs folder{background="#43464B"}

From setting menu search for `Pages` left side menu. In this `Pages` left menu, under branch section:
Instead of /root folder, navigate and select /docs folder instead. And then save changes applied

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/20_Step_10_github_setup_docs.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/21_Step_10_github_setup_docs_01.png)

:::
:::


## 11. In RStudio push website to GitHub{background="#43464B"}

From RStudio, push all your website files to the `GitHub` to update your website content.

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/22_Step_11_push_website_files_to_github_RSTUDIO.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/23_Step_11_push_website_files_to_github_RSTUDIO_01.png)

:::
:::

## 12. Check GitHub website from browser {background="#43464B"}

Now our website is up and running, Access it from GitHub website URL  

`https://pablo-tester.github.io/`

::: columns
::: {.column width="40%"}
![](NHSR_Pycon_images/24_Step_12_check_github_website_online_01.png)
:::

::: {.column width="60%"}
![](NHSR_Pycon_images/25_Step_12_check_github_website_online_02.png)
:::
:::


## 13. Resources/Further topics{background="#43464B"}

- Tutorial for Creating a new RStudio project with GitHub to visualize climate change (CC213). Riffomonas Project https://www.youtube.com/watch?v=d5dUkO5lXds&list=PLmNrK_nkqBpLdTEOj_-bwp58490i8ezRI&index=9

- Repository “climate_viz” on my main GitHub account: https://github.com/Pablo-source/climate_viz

- Repository using Git and the terminal to commit changes to GitHub: https://github.com/Pablo-tester/housing_pipelines

Further topics

- Settings: (Manage Pipeline to deploy website):“Re-run all jobs” to ensure the new changes were appliedQuarto

- Setup SSH security setting to clone repo and apply changes using Git and the Terminal instead of Rstudio:

- Create a public/private RSA key pair to use SSH instead of URL to commit changes to GitHub



